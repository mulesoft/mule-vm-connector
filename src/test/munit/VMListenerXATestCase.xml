<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

    <munit:config name="VMListenerXATestCase.xml" />

    <munit:test name="messageIsReturnedToQueue">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mqListenerRollback"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <set-payload value='#["test"]'/>
            <async>
                <vm:publish config-ref="VM_Config" queueName="persistentQueue">
                    <vm:content >
                        <![CDATA[#["publish message"]]]>
                    </vm:content>
                </vm:publish>
            </async>
        </munit:execution>
        <munit:validation>
            <until-successful millisBetweenRetries="5000" maxRetries="5">
                <munit-tools:assert-that expression="#[MunitTools::queueSize()]" is="#[MunitTools::equalTo(1)]"/>
            </until-successful>
        </munit:validation>
    </munit:test>

    <munit:test name="rollbackXa" >
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="xaListener"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <set-variable variableName="message" value="#[randomInt(10000) as String]"/>
            <vm:publish config-ref="VM_Config" queueName="persistentQueue">
                <vm:content >#[{txAction : 'ROLLBACK'}]
                </vm:content>
            </vm:publish>
        </munit:execution>
        <munit:validation>
            <until-successful maxRetries="5" millisBetweenRetries="5000">
                <logger message="#[MunitTools::queueSize()]" level="ERROR"/>
                <munit-tools:assert-that expression="#[MunitTools::queueSize()]" is="#[MunitTools::equalTo(1)]"/>
            </until-successful>
        </munit:validation>
    </munit:test>

    <flow name="mqListenerRollback" maxConcurrency="1" >
        <vm:listener queueName="persistentQueue" config-ref="VM_Config" numberOfConsumers="1" transactionType="XA"/>
        <munit-tools:queue/>
    </flow>

    <flow name="xaListener">
        <vm:listener queueName="persistentQueue" config-ref="VM_Config" transactionType="XA"  numberOfConsumers="1"/>
        <flow-ref name="listenerCommon"/>
    </flow>

    <flow name="listenerCommon">
        <async>
            <logger level="DEBUG" message="#[output application/json --- payload]"/>
            <munit-tools:queue/>
        </async>
        <choice>
            <when expression="#[payload.txAction == 'ROLLBACK']">
                <raise-error type="MULE:ANY" description="TX"/>
            </when>
        </choice>
    </flow>

</mule>
